#!/bin/sh

# Python2 compile wrapper-script for 'compile.sh'.
# See that script for syntax and more info.
#
# This script does not actually "compile" the source, but writes a
# shell script that will function as the executable: when called, it
# will execute the source with the correct interpreter syntax, thus
# allowing this interpreted source to be used transparantly as if it
# was compiled to a standalone binary.
#
# NOTICE: when this compiler script is used with USE_CHROOT on, the
# chroot requires python to be installed

DEST="$1" ; shift
MEMLIMIT="$1" ; shift
MAINSOURCE="$1"

# Check syntax
python2 -m py_compile "$@"
EXITCODE=$?
[ "$EXITCODE" -ne 0 ] && exit $EXITCODE
rm -f -- *.pyc

# Write executing script:
cat > "$DEST" <<EOF
#!/bin/sh
# Generated shell-script to execute python interpreter on source.

# Detect dirname and change dir to prevent class not found errors.
if [ "\${0%/*}" != "\$0" ]; then
	cd "\${0%/*}"
fi

# set non-existing HOME variable to make python happy
export ONLINE_JUDGE=1 DOMJUDGE=1 HOME=/does/not/exist

exec python "$MAINSOURCE" "\$@"
EOF

chmod a+x "$DEST"

exit 0
