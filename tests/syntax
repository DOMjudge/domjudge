#!/bin/sh

# Run some Syntax checking tests on PHP and Shell scripts
PHP=$(which php)

if [ -x $PHP ]; then
	find .. -path ../lib/vendor -prune -o -path ../webapp/var -prune -o -name '*.php' | \
	while read -r i ; do
		$PHP -l "$i" | grep -v "^No syntax errors detected in "
	done

	grep -rsl "^#\!.*php" .. | grep -vE '/\.(svn|git)/' | grep -v '\.php' | \
	while read -r i ; do
		$PHP -l "$i" | grep -v "^No syntax errors detected in "
	done
else
	echo "PHP not found"
fi

if [ -x /usr/bin/checkbashisms ]; then
	grep -rsl "^#\!.*/bin/sh" .. | grep -vE '(\.(svn|git)/|^\.\./(config|autom4te|install-sh|sql/files/defaultdata/hs/run|lib/vendor/|output))' | \
	while read -r i ; do
		if [ "${i##*.}" != "zip" ]; then
			checkbashisms "$i"
		fi
	done
else
	echo "checkbashisms not found in /usr/bin/checkbashisms"
fi

# We ignore the following shellcheck warnings, for more details see:
# https://github.com/koalaman/shellcheck/wiki/<code>
#
# SC1072: buggy on empty compile scripts, see https://github.com/koalaman/shellcheck/issues/384
# SC2034: many "unused variables" are actually used, or in compile scripts declared on purpose
# SC2086: there are too many cases where quoting is not necessary and tedious

if [ -x /usr/bin/shellcheck ]; then
	grep -rslE "^#\!.*/bin/(ba)?sh" .. | grep -vE '(\.(svn|git)/|^\.\./(config|autom4te|install-sh|sql/files/defaultdata/hs/run|lib/vendor/|output))' | \
	while read -r i ; do
		if [ "${i##*.}" != "zip" ]; then
			shellcheck -f gcc -e 1072,2034,2086 "$i"
		fi
	done
else
	echo "shellcheck not found in /usr/bin/shellcheck"
fi
