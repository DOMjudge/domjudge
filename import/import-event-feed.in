#!/usr/bin/env php
<?php declare(strict_types=1);
/**
 * @configure_input@
 *
 * Import contest data from an event feed following the Contest API specification.
 * See https://ccs-specs.icpc.io/contest_api
 *
 * The following assumptions and caveats are of note:
 * - The contest that will be imported to should already contain the problems,
 *   because the event feed does not contain the testcases
 * - Problems will be updated, but not their test_data_count, time_limit or ordinal
 * - Judgement types will not be imported, but only verified
 * - Languages will not be imported, but only verified
 * - Team members will not be imported
 * - Judgements will not be imported
 * - Runs will not be imported, but their verdict will be stored on the submission
 * - Awards will not be imported
 * - State will not be imported
 *
 * Part of the DOMjudge Programming Contest Jury System and licenced
 * under the GNU GPL. See README and COPYING for details.
 */

use App\Kernel;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\ErrorHandler\Debug;

if (false === in_array(\PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
    echo 'Warning: The console should be invoked via the CLI version of PHP, not the '.\PHP_SAPI.' SAPI'.\PHP_EOL;
}

set_time_limit(0);

require('@domserver_etcdir@/domserver-static.php');

require WEBAPPDIR.'/config/autoload.php';

if (!class_exists(Application::class)) {
    throw new RuntimeException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

$input = new ArgvInput();
if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
    putenv('APP_ENV='.$_SERVER['APP_ENV'] = $_ENV['APP_ENV'] = $env);
}

if ($input->hasParameterOption('--no-debug', true)) {
    putenv('APP_DEBUG='.$_SERVER['APP_DEBUG'] = $_ENV['APP_DEBUG'] = '0');
}

require WEBAPPDIR.'/config/bootstrap.php';

if ($_SERVER['APP_DEBUG']) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$kernel = new Kernel($_SERVER['APP_ENV'], (bool) $_SERVER['APP_DEBUG']);
$application = new Application($kernel);
$application->setDefaultCommand('import:eventfeed', true);
$application->run($input);
