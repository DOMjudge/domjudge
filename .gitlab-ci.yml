variables:
  SAST_DEFAULT_ANALYZERS: "flawfinder, phpcs-security-audit, eslint, secrets"

stages:
  - test
  - compare

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml

.retry_config: &retry_job
  retry:
    max: 2
    when:
     - always

.retry_time: &tiny_job
  timeout: 5m

.retry_time: &short_job
  timeout: 10m

.retry_time: &long_job
  timeout: 45m
# Due to the retry this will be worst case 3*timeout before the job fails

webstandard_check_role:
  <<: *retry_job
  <<: *long_job
  parallel:
    matrix:
      - ROLE: public
        TEST: [w3cval,WCAG2A,WCAG2AA,Section508]
      - ROLE: team
        TEST: [w3cval,WCAG2A,WCAG2AA,Section508]
      - ROLE: balloon
        TEST: [w3cval,WCAG2A,WCAG2AA,Section508]
      - ROLE: jury
        TEST: [w3cval]
  stage: test
  image: domjudge/gitlabci:2.1
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
  script:
  - ./gitlab/webstandard.sh
  artifacts:
    when: always
    paths:
      - public
      - w3chtmlpublic.json
      - w3ccsspublic.json
      - w3csvgpublic.json

check syntax:
  <<: *retry_job
  <<: *tiny_job
  stage: test
  image: domjudge/gitlabci:2.1
  script:
    - ./gitlab/syntax.sh

check_w3c_css:
  <<: *retry_job
  <<: *tiny_job
  stage: test
  image: 
    name: cyb3rjak3/html5validator
    entrypoint: [""]
  script:
    - JAR=`find /usr/local/lib -name vnu.jar|tail -n1`
    - java -jar $JAR --format json --skip-non-css webapp 2>result; RES=$?
    - python3 -m json.tool < result
    - exit $RES

check_w3c_html:
  <<: *retry_job
  <<: *long_job
  stage: test
  image: domjudge/gitlabci:2.1
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
  - ./gitlab/html.sh
  artifacts:
    when: always
    paths:
      - public
      - w3cHtmlpublic.json

check_wcag:
  <<: *retry_job
  <<: *short_job
  stage: test
  image: domjudge/gitlabci:2.1
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
  - ./gitlab/wcag.sh
  artifacts:
    when: always
    paths:
      - public

run unit tests:
  <<: *retry_job
  <<: *short_job
  stage: test
  image: domjudge/gitlabci:2.1
  # Disabled for now as it drastically speeds up running unit tests and we don't use it yet
  # before_script:
  #   - apt-get update -yqq
  #   - apt-get install php-xdebug -yqq
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
  script:
    - ./gitlab/unit-tests.sh
  artifacts:
    when: always
    paths:
      - unit-tests.xml
      - coverage-html
      - deprecation.txt
    reports:
      junit:
        - unit-tests.xml
  cache:
    key: unit-tests
    paths:
      - lib/vendor/

visual_pr:
  <<: *retry_job
  <<: *short_job
  stage: test
  image: domjudge/gitlabci:2.1
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
  - ./gitlab/visualpr.sh pr
  artifacts:
    when: always
    paths:
     - screenshotspr
     - public

visual_master:
  <<: *retry_job
  <<: *short_job
  stage: test
  image: domjudge/gitlabci:2.1
  services:
    - mariadb
  variables:
    MYSQL_ROOT_PASSWORD: password
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
   - git fetch
   - git checkout -B master origin/master
   - git branch --set-upstream-to=origin/master master
   - git pull
   - git checkout $CI_COMMIT_SHA -- gitlab/visualpr.sh # Always compare with the same tests
   - git checkout $CI_COMMIT_SHA -- gitlab/default-nginx
   - git checkout $CI_COMMIT_SHA -- gitlab/visualreg.css
   - ./gitlab/visualpr.sh master
  artifacts:
    when: always
    paths:
     - screenshotsmaster
     - public
    
visual_compare:
  <<: *retry_job
  <<: *tiny_job
  stage: compare
  image: domjudge/gitlabci:2.1
  needs:
   - visual_pr
   - visual_master
  script:
   - ./gitlab/visualcompare.sh
  artifacts:
     when: always
     paths:
      - failingchanges
      - predictedchanges

.job_template: &job_integration
  <<: *retry_job
  <<: *long_job
  stage: test
  image: domjudge/gitlabci:2.1
  variables:
    MYSQL_ROOT_PASSWORD: password
    MARIADB_PORT_3306_TCP_ADDR: sqlserver
  script:
    - timeout --signal=15 40m ./gitlab/integration.sh
  artifacts:
    when: always
    paths:
      - gitlabartifacts
  cache:
    key: integration
    paths:
      - lib/vendor/

# TODO: Re-enable when gitlab is in better shape...
#  cache:
#    key: integration
#    paths:
#      - chroot

integration_mysql:
  <<: *job_integration
  services:
    - name: mysql
      command: ["--default-authentication-plugin=mysql_native_password"]
      alias: sqlserver

integration_mariadb:
  <<: *job_integration
  services:
    - name: mariadb
      alias: sqlserver

phpcs_compatibility:
  <<: *tiny_job
  stage: test
  image: pipelinecomponents/php-codesniffer:latest
  before_script:
    - set -euxo pipefail
    - export PS4='[$?] $'
  parallel:
    matrix:
      - PHPVERSION: ["7.2","7.3","7.4"]
  script:
    - >
      phpcs -s -p --colors
      --standard=PHPCompatibility
      --extensions=php
      --runtime-set testVersion $PHPVERSION
      lib/lib.*.php
      etc
      judge
      webapp/src
      webapp/tests
      webapp/public
      webapp/config

# This finds different problems from codesniffer
php linter:
  <<: *tiny_job
  stage: test
  image: pipelinecomponents/php-linter:latest
  script:
    - ls
    - >
      parallel-lint --colors
      lib/lib.*.php
      etc
      judge
      webapp/src
      webapp/tests
      webapp/public
      webapp/config

