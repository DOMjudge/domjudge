{% extends 'public/help/base.html.twig' %}

{% set id = 'TechnicalInfo' %}

{% block header %}
    Technické informace k řešení
{% endblock %}

{% block body %}
    <p>
        Ve všech úlohách platí tato sada pravidel:
    </p>

    <ol>
        <li>
            Vstup programu je vždy směrován do standardního vstupu (stdin).
        </li>
        <li>
            Výstup je kontrolován na standardním výstupu (stdout).
        </li>
        <li>
            Jako znak nového řádku se ve vstupech i při kontrole používá <code>\n</code>, nikoli <code>\r\n</code>.
        </li>
        <li>
            Každý vstup a výstup, který <b>není prázdný</b>, je zakončen jedním zalomením řádku (<code>\n</code>). Tedy,
            všechny řádky, i ten poslední, končí tímto znakem. Dbejte na to, vypisujete-li text na řádek postupně, bez
            automatického odřádkování. S tím se nejspíš setkáte pouze v jazycích C a C++.
        </li>
        <li>
            Jako desetinná značka se používá tečka. Je dobré dát pozor zejména při použití C# na českých Windows.
        </li>
        <li>
            Při vypisování desetinných čísel v Pythonu, Javě a C++ nedochází k ořezávání nul. Při kontrole výstupu by
            však přebytečné nuly vyústily v chybu. Řešení lze najít například
            <a href="https://stackoverflow.com/questions/2440692/formatting-floats-without-trailing-zeros">
                zde pro Python
            </a>,
            <a href="https://stackoverflow.com/questions/14204905/how-to-remove-trailing-zeros-from-a-double">
                zde pro Javu
            </a> a
            <a href="https://stackoverflow.com/questions/13686482/c11-stdto-stringdouble-no-trailing-zeros">
                zde pro C++
            </a>.
        </li>
    </ol>

    <p>
        Vaše řešení spouštíme na těchto verzích jazyků/kompilátorů:
    </p>

    <ul>
        <li>C a C++: GCC 9.4.0</li>
        <li>C# 8.0 (Mono 6.8.0)</li>
        <li>Java 11</li>
        <li>Node.js 10.19</li>
        <li>Python 3.6</li>
    </ul>

    <p>
        Funkce z pozdějších verzí nemusí být dostupné. V případě, že byste takovou funkci použili, dozvíte se to po
        odevzdání chybovou hláškou a nahlédnutím do diff output (viz předchozí sekce nápovědy).
    </p>

{% endblock %}
