# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $debug: '%kernel.debug%'
            $domjudgeVersion: '%domjudge.version%'
            $projectDir: '%kernel.project_dir%'
            $cacheDir: '%kernel.cache_dir%'
            $sqlDir: '%domjudge.sqldir%'
            $etcDir: '%domjudge.etcdir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\ApiDescriber\ParameterRefMergeDescriber:
        tags:
            -   name: nelmio_api_doc.describer
                priority: -999

    App\Doctrine\HashPasswordSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }


    App\Logger\VarargsLogMessageProcessor:
        autowire: true
        tags:
            - { name: monolog.processor }

    fos_rest.exception.controller:
        public: true
        class: App\FosRestBundle\ExceptionController
        arguments:
            - '@fos_rest.view_handler'
            - '@fos_rest.exception.codes_map'
            - '%kernel.debug%'

    Metadata\MetadataFactoryInterface: '@jms_serializer.metadata_factory'

    # We need the configuration serivce to be public to be able to run two of the migrations
    App\Service\ConfigurationService:
        public: true
        arguments:
            $configCache: '@config_cache_factory'
