# @configure_input@
#
# Shared code for building and running a chroot.
#
# Part of the DOMjudge Programming Contest Jury System and licensed
# under the GNU GPL. See README and COPYING for details.

cleanup() {
    # Unmount things on cleanup
    umount -f "$CHROOTDIR/proc" >/dev/null 2>&1 || /bin/true
    umount -f "$CHROOTDIR/sys" >/dev/null 2>&1 || /bin/true
    umount -f "$CHROOTDIR/dev/pts" >/dev/null 2>&1 || /bin/true
    # Cleanup docker directory if present
    ([ -n "$WORKDIR" ] && [ -d "$WORKDIR" ] && rm -rf "$WORKDIR") || /bin/true
}

unmount_filesystems() {
    umount "$CHROOTDIR/dev/pts"
    umount "$CHROOTDIR/sys"
    umount "$CHROOTDIR/proc"
}

error() {
    echo "Error: $*"
    echo
    usage
    exit 1
}

check_showhelp() {
    if [ -n "$SHOWHELP" ]; then
        usage
        exit 0
    fi
}

check_rootuser() {
    if [ "$(id -u)" != 0 ]; then
        echo "Warning: you probably need to run this program as root."
    fi
}

mount_host_special_filesystems() {
    mount -t proc proc "$CHROOTDIR/proc"
    mount -t sysfs sysfs "$CHROOTDIR/sys"

    # Required for some warning messages about writing to log files
    mount --bind /dev/pts "$CHROOTDIR/dev/pts"
}

copy_host_dns_truststore() {
    # Do some final domjudge specific set up of the chroot
    rm -f "$CHROOTDIR/etc/resolv.conf"
    cp /etc/resolv.conf /etc/hosts /etc/hostname "$CHROOTDIR/etc" || true
    cp /etc/ssl/certs/ca-certificates.crt "$CHROOTDIR/etc/ssl/certs/" || true
    cp -r /usr/share/ca-certificates/* "$CHROOTDIR/usr/share/ca-certificates" || true
    cp -r /usr/local/share/ca-certificates/* "$CHROOTDIR/usr/local/share/ca-certificates" || true
}

# Default directory where the chroot tree lives:
CHROOTDIR="@judgehost_chrootdir@"

# Workdir for docker
WORKDIR=""